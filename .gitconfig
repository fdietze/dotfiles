[include]
    path = .gitconfig_hub

[user]
    email = felix.dietze@rwth-aachen.de
    name = Felix Dietze

[core]
    pager = diff-so-fancy | less --tabs=4 --RAW-CONTROL-CHARS
    excludesfile = ~/.config/git/ignore # needed for ag

[push]
    default = current
    followTags = true # Automatically pushes annotated tags (but not leightweight tags!)

[pull]
    ff = only
    rebase = true

[fetch]
    prune = true # remove old branches on fetch

[branch]
    autosetuprebase = always

[merge]
    ; ff = only
    ignore-space-change = true
    tool = meld
    conflictstyle = diff3 # this allows to show 3 panes in meld, https://stackoverflow.com/questions/27417656/should-diff3-be-default-conflictstyle-on-git/70387424#70387424

[rerere]
    enabled = 1 # Reuse recorded resolution of conflicted merges: https://git-scm.com/docs/git-rerere

[rebase]
    autoStash = true
    autoSquash = true # useful for `git commit --fixup <hash>` (https://fle.github.io/git-tip-keep-your-branch-clean-with-fixup-and-autosquash.html)

[status]
    showUntrackedFiles = all

[transfer]
    ; fsckobjects = true

[diff]
    algorithm = histogram # https://luppeng.wordpress.com/2020/10/10/when-to-use-each-of-the-git-diff-algorithms/
    indentHeuristic = true
    wordRegex = [A-Z][a-z]*|[a-z]+|[^[:space:]] # see camel case as separate words
    colorMoved = zebra

[diff "scala"]
    xfuncname = ^\\s*(.*(def|object|class|trait) .*)$

[diff "markdown"]
    xfuncname = "^#+.*$"

[commit]
    verbose = true # show diff in editor when committing

[apply]
    ignoreWhitespace = change # do not produce whitespace conflicts

[alias]
    st = status
    co = checkout
    com = checkout master
    cob = checkout -b
    cot = "!TEMP=$(mktemp -d); f() { git worktree prune && git worktree add $TEMP $1 && zsh -c \"cd $TEMP; zsh\";}; f" # checkout branch in temporary directory
    ci = commit
    amend = commit --amend
    unstage = reset HEAD
    prev = reset HEAD~1
    fixup = !zsh -ic 'git commit --fixup $(git-select-commit)'
    ignore = "!cd -- ${GIT_PREFIX:-.}; f() { echo \"$1\" >> .gitignore; }; f" # add to .gitignore in current directory
    cl = clone
    br = branch
    brr = branch -r
    lg = fry one-line-log-colors
    lga = fry branch-topology
    df = fry word-based-diff
    dfm = fry word-based-diff master
    dfs = fry word-based-diff --staged
    dfl = diff --irreversible-delete --find-copies  --find-copies-harder --ignore-space-at-eol --ignore-space-change --ignore-all-space --ignore-blank-lines
    dfls = diff --staged
    sdf = show --color-words
    p = push
    pf = push --force-with-lease
    peng = push --force-with-lease
    wupp = push
    up = pull --rebase --autostash # somehow git does not pick these up from the config automatically anymore
    u = up
    f = fetch
    fa = fetch --all
    po = !git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\" # push current branch to origin
    dbr = "!f() { git branch -D $1; git push origin :$1;}; f" # delete local and remote branch
    dtag = "!f() { git tag -d $1; git push origin :$1;}; f" # delete local and remote tag
    wip = "!git add -A; git commit --message=\"WIP: `git diff --name-only --staged | xargs -L 1 basename | paste -sd \",\"`\""
    wipbr = "!f() { git cob $1; git wip; git po;}; f" # commit and push everything on a new branch
    pr = "!f() { ! git diff --staged --quiet && git cob \"$1\" && git ci && gh pr create --fill;}; f"
    prm = "!f() { ! git diff --staged --quiet && git cob \"$1\" && git ci && gh pr create --fill -l=\"ready-to-merge-squash\" ;}; f"
    prd = "!f() { ! git diff --staged --quiet && git cob \"$1\" && git ci && gh pr create --fill --draft;}; f"
    prune-local = "!git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", $1); print $1}'); do (echo -n \"DELETE $branch? [y/N]: \"; read -r answer; [[ \"$answer\" =~ ^(y|Y) ]]) && git branch -D $branch; done"

    ss = stash save --include-untracked
    sski = stash save --include-untracked --keep-index
    sp = stash pop

    rb = rebase
    rbm = rebase master
    rbom = rebase origin/master
    rba = rebase --abort
    rbs = rebase --skip
    rbc = rebase --continue
    rbi = rebase -i
    rbim = rebase -i master
    rbiom = rebase -i origin/master

    m = merge
    mra = merge --abort
    mrs = merge --skip
    mrc = merge --continue

    cp = cherry-pick
    cpa = cherry-pick --abort
    cps = cherry-pick --skip
    cpc = cherry-pick --continue

    h = help

[color]
    branch = auto
    diff = auto
    status = auto
    ui = true

[color "diff"]
    old = red bold
    new = green bold
    meta = yellow
    frag = magenta bold
    commit = yellow bold
    whitespace = red reverse

[color "status"]
    added = green
    changed = yellow
    untracked = blue

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[diff-so-fancy]
    first-run = false
