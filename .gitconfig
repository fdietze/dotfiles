[include]
    path = .gitconfig_hub

[user]
    email = felix.dietze@rwth-aachen.de
    name = Felix Dietze

[core]
    pager = less
    excludesfile=~/.config/git/ignore # needed for ag

[push]
    default = simple
    followTags = true

[pull]
    ff = only
    rebase = true

[fetch]
    prune = true # remove old branches on fetch

[branch]
    autosetuprebase = always

[merge]
    ff = only
    ignore-space-change = true
    conflictstyle = diff3 # this allows to show 3 panes in meld
    tool = meld

[rerere]
	enabled = 1 # Reuse recorded resolution of conflicted merges: https://git-scm.com/docs/git-rerere

[rebase]
    autoStash = true
    autoSquash = true # useful for `git commit --fixup <hash>` (https://fle.github.io/git-tip-keep-your-branch-clean-with-fixup-and-autosquash.html)

[status]
    showUntrackedFiles = all

[transfer]
    ; fsckobjects = true

[diff]
    algorithm = histogram
    indentHeuristic = true
    wordRegex=[A-Z][a-z]*|[a-z]+|[^[:space:]] # see camel case as separate words

[commit]
    verbose = true

[apply]
    ignoreWhitespace = change # do not produce whitespace conflicts

[alias]
    st = status
    co = checkout
    cob = checkout -b
    cot = "!TEMP=$(mktemp -d); f() { git worktree prune && git worktree add $TEMP $1 && zsh -c \"cd $TEMP; zsh\";}; f" # checkout branch in temporary directory
    ci = commit
    cia = commit -a
    amend = commit --amend
    unstage = reset HEAD
    prev = reset HEAD~1
    fixup = "!zsh -ic 'git commit --fixup $(git-select-commit)'"
    cl = clone
    br = branch
    brr = branch -r
    lg = fry one-line-log-colors
    lga = fry branch-topology
    df  = fry word-based-diff
    dfs  = fry word-based-diff --staged
    diff = diff --irreversible-delete --find-copies  --find-copies-harder --ignore-space-at-eol --ignore-space-change --ignore-all-space
    diffs = diff --irreversible-delete --find-copies  --find-copies-harder --ignore-space-at-eol --ignore-space-change --ignore-all-space --staged
    p = push
    pf = push --force-with-lease
    peng = push --force-with-lease
    wupp = push
    up = pull --rebase --autostash
    u = up
    f = fetch
    fa = fetch --all
    po = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\"" # push current branch to origin
    dbr = "!f() { git branch -D $1; git push origin :$1;}; f" # delete local and remote branch
    dtag = "!f() { git tag -d $1; git push origin :$1;}; f" # delete local and remote tag
    wip = "!git add -A; git commit --message='wip'"
    wipbr = "!f() { git cob $1; git wip; git po;}; f" # push current branch to origin

    ss = stash save
    ssu = stash save --include-untracked
    sp = stash pop

    rb = rebase
    rba = rebase --abort
    rbs = rebase --skip
    rbc = rebase --continue
    rbi = rebase -i

    m = merge
    mra = merge --abort
    mrs = merge --skip
    mrc = merge --continue

    cpa = cherry-pick --abort
    cps = cherry-pick --skip
    cpc = cherry-pick --continue

    h = help

[color]
    branch = auto
    diff = auto
    status = auto

[color "diff"]
    old = red
    new = green

[color "status"]
    added = green
    changed = yellow
    untracked = blue

[tig]
    vertical-split = true
    tab-size = 4
    ignore-space = all
    ignore-case = true ; search
    ; wrap-lines = true ; conflicts with stage-update-line
    editor-line-number = true
    mouse-scroll = true
    show-changes = true
    status-show-untracked-dirs = false

[tig "bind"]
    ;NEO
    generic = ä Quit
    generic = ü view-close
    generic = 8 move-up ; NEO right hand analog to arrow up
    generic = 5 move-down ; NEO right hand analog to arrow down

    generic = g move-first-line
    generic = G move-last-line
    main = G move-last-line ; overwrites default keybinding
    main = C !git checkout %(commit) ; overwrites default keybinding
    generic = F !git fetch
    generic = P !git push
    status = A !git commit --amend
    status = F !git fixup
    stage = u stage-update-line
    stage = <Home> stage-update-line ; NEO AltGr+u
    stage = U status-update
    status = U status-update
    stage = A !git commit --amend
    stage = C !git commit
    status = w !git fry word-based-diff
    status = W !git fry word-based-diff --staged
    stage = w !git fry word-based-diff %(file)
    stage = W !git fry word-based-diff --staged %(file)
    ; generic = C !git cherry-pick %(commit)

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
