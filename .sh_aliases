source ~/.aliases









# online checking tools
ONLINECMD='ping -c 1 8.8.8.8 -W 5 && ping -c 1 google.com -W 5'
alias online="$ONLINECMD" # -c <retries>  -W <timout>
alias online-wait='until online; do; sleep 3; done; espeak -p 30 "online"; espeak -p 80 "online"; espeak -p 50 "online"'
alias on="w --interval=1 '$ONLINECMD'"







sshforward() {
    # usage: sshforward host remoteport [localport]
    REMOTEHOST=$1
    REMOTELOCALPORT=$2
    LOCALPORT=${3:-$2}
    shift 3
    ssh -NL ${LOCALPORT}:localhost:${REMOTELOCALPORT} ${REMOTEHOST} $@
}

fassh() {
  local instance
	instance=$(aws ec2 describe-instances --filter Name=instance-state-name,Values=running | jq -r '.Reservations[].Instances[] | [ .InstanceId, (.Tags[] | select(.Key == "Name") | .Value) ] | @tsv' | fzf | cut -f1)
  if [ -n "$instance" ]; then
      ssh $instance
  fi
}



x() { # open a gui command and close the terminal
    zsh -i -c "$@ &; disown" 
    exit
}


note() { # simple notetaking
    $EDITOR "$(date +"$HOME/notes/%Y-%m-%d-$1.md")"
}


notes() { # browse notes with fzf
    (
        cd "$HOME/notes" || exit
        file="$(rg --files --sort modified | fzf --no-sort --tac --query="$(echo $@ | tr ' ' '\ ' )")"
        [[ -n $file ]] && $EDITOR "$file"
    )
}




# file search
alias vag="search-select-edit"


vrg() (
# https://github.com/junegunn/fzf.vim#example-advanced-ripgrep-integration
    QUERY="${1:-}"
    CMD_FMT='rg --column --line-number --no-heading --color=always --smart-case -- %s || true'
    INITIAL_COMMAND=$(printf "$CMD_FMT" "$QUERY")
    RELOAD_COMMAND=$(printf "$CMD_FMT" '{q}')
    $INITIAL_COMMAND | fzf --bind 'change:reload: vd'
    # let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
    # call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)
  # endfunction
)



# file listing/interaction
if [ "$(uname 2> /dev/null)" != "Linux" ]; then
    # for Mac
    alias ls='ls -hFG'
else
  alias ls='ls --group-directories-first --color=always --escape --human-readable --classify'
	if [ -n "${commands[grc]}" ]; then
	    alias ls='grc ls --group-directories-first --color=always --escape --human-readable --classify'
  fi
fi

autoload -U zmv
alias mcp='noglob zmv -C -W'
alias mln='noglob zmv -L -W'
alias mmv='noglob zmv -W'



alias cdt='cd-tmp'
alias cdg='cd-git-root'

if [ -n "$ZSH_VERSION" ]; then
    alias -g GSC='$(git-select-commit)'
    alias -g GSCA='$(git-select-commit --all)'
    alias -g GSD='$(git-select-dirty-files)'
fi


# global aliases
if [ -n "$ZSH_VERSION" ]; then
    alias -g G=' | grep -i'
    alias -g H=' | head'
    alias -g T=' | tail'
    alias -g L=' | less'
    alias -g N="\"\$(\ls -tp | grep -v '\/$' | head -1)\""
    alias oo='o N'
fi







autocolors() {
    if type sunwait >/dev/null; then 
        if [ $(sunwait poll 50.77N 6.08W) == "DAY" ]
            then ~/bin/theme light $@
            else ~/bin/theme dark $@
        fi
        else ~/bin/theme light $@
    fi
}

airplane() {
    nmcli radio wifi off
    sudo rfkill block all
}

low() {
    # save energy
    # xbacklight -set 10 -time 0
    # keyboardbacklightoff
    touch /tmp/low-power-mode # a marker for other apps to detect if in low-power mode

    low-traffic

    echo "powersave governor..."
    sudo cpupower frequency-set -g powersave
    echo "max-frequency: 2GHz..."
    sudo cpupower frequency-set --max 2GHz

    echo "switching off wifi/bluetooth..."
    airplane
}

stayawake() {
    # disable screensaver
    xset s noblank
    xset s off
    xset -dpms
}

toggle-monitor() (
  intern=eDP-1
  extern=HDMI-1

  if xrandr | grep "$extern disconnected"; then
    xrandr --output "$extern" --off --output "$intern" --auto
  else
    xrandr --output "$intern" --off --output "$extern" --auto
  fi
)

display-projector() {
    sysu stop redshift
    # xrandr --output HDMI-1  --auto --primary --output VGA-1 --off --output eDP-1 --off
    xrandr --output HDMI-1  --auto --primary --output eDP-1 --off

    pacmd set-sink-mute 0 0 # unmute
    # xsetroot -solid '#ffffff'

    stayawake
}

reset-screen() {
    sysu start redshift

    xrandr --output eDP-1  --auto --primary --output HDMI-1 --off --output DP-2 --off

    # enable screensaver
    xset s blank
    xset s on
    xset +dpms

    sleep 3
    "$HOME/bin/theme" &
}


search-select-edit () {
    results=$(ag --filename --noheading --numbers --column --nobreak --color --hidden -S $@) 
    selected=$(echo -E $results | fzf --ansi --multi --no-sort --tac) 
    [[ -z "$selected" ]] && return 0
    uniquefileswithlines=$(echo -E $selected | tac | sed '$!N; /^\([^:]*\):.*\n\1:.*$/!P; D' | tac | cut -d: -f1-3) 
    eval "vim $(echo -E $uniquefileswithlines | xargs -I'{}' echo -E -n '"{}" ')"
}

retry() {
    until zsh -ic "$@"
    do
        echo "failed: $@"
        sleep 1
        echo "trying again..."
    done
}






untilon() {
    until ping -c 1 $1 -W 2; do sleep 1; done;
}

# vim: ft=sh
