export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
export FZF_DEFAULT_OPTS="--extended --multi --ansi --exit-0" # extended match and multiple selections
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--tac --height 90% --reverse --preview 'pistol {} \$FZF_PREVIEW_COLUMNS \$FZF_PREVIEW_LINES' --bind 'ctrl-d:preview-page-down,ctrl-r:reload($FZF_CTRL_T_COMMAND)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


insertFileFromCurrentDir () {
  export DIR=$(mktemp)
  echo "." > "$DIR"

  files="$(\
  \ls -tr --color=always "$(cat "$DIR")" |
  fzf --tac --height 90% --reverse \
    --preview 'cat "$DIR" && echo "" && pistol "$(cat "$DIR")"/{} $FZF_PREVIEW_COLUMNS $FZF_PREVIEW_LINES' \
    --bind 'ctrl-d:preview-page-down' \
    --bind 'ctrl-a:select-all' \
    --bind 'ctrl-r:reload(\ls -tr --color=always "$(cat "$DIR")")'\
    --bind 'ctrl-g:execute(realpath "$(cat "$DIR")"/.. > "$DIR")+reload(\ls -tr --color=always "$(cat "$DIR")")+clear-query+deselect-all+first'\
    --bind 'ctrl-n:execute(realpath "$(cat "$DIR")"/{} > "$DIR")+reload(\ls -tr --color=always "$(cat "$DIR")")+clear-query+deselect-all+first' |
  awk '{system("realpath --relative-to=. \"$(cat \"'$DIR'\")/"$0"\"")}' |
  sed -e 's/\(.*\)/"\1"/' |
  tr '\n' ' ')"

  [[ -z "$files" ]] && zle reset-prompt &&  return 0
  LBUFFER+="$files"
  local ret=$?
  zle reset-prompt
  return $ret
}
zle -N insertFileFromCurrentDir


insertCommitHash () {
  gitlog=$(git log --color=always --pretty=format:'%Cred%h %C(reset)%C(dim)%ad%Creset %C(blue)%an%Creset %s%C(yellow)%d%C(reset) %Cgreen(%ar)%Creset' --abbrev-commit --date-order --date="format:%F %R")
  commits="$(echo -E $gitlog | fzf --no-sort --exact --ansi --height 90% --reverse --preview "git name-rev --name-only --no-undefined --always \$(echo {} | cut -d ' ' -f1) && git show \$(echo {} | cut -d ' ' -f1) --stat --format=reference --color=always && git show --color-words \$(echo {} | cut -d ' ' -f1)" --bind 'ctrl-d:preview-page-down,ctrl-u:preview-page-up' | cut -d ' ' -f1 | xargs git name-rev --name-only --no-undefined --always | tr '\n' ' ')"
  [[ -z "$commits" ]] && zle reset-prompt && return 0
  LBUFFER+="$commits"
  local ret=$?
  zle reset-prompt
  return $ret
}
zle -N insertCommitHash
