bindkey -v # activate vi modes
export KEYTIMEOUT=1 # reduce ESC key delay to 0.01s

# implement replace mode
bindkey -N virep viins
bindkey -M vicmd "R" overwrite-mode
overwrite-mode() {
  zle -K virep
  zle .overwrite-mode
}
zle -N overwrite-mode

# VI mode indicator
# use this variable in your PROMPT or RPROMPT
MODE_INDICATOR="%{$bg[green]%}%{$fg[white]%}%B I %{$reset_color%}"

# reset mode indicator to insert mode for every new line
function zsh-vi-precmd {
    MODE_INDICATOR="%{$bg[green]%}%{$fg[white]%}%B I %{$reset_color%}"
}
add-zsh-hook precmd zsh-vi-precmd

function zsh-vi-preexec {
    printf '\e[2 q' # reset to steady block cursor
}
add-zsh-hook preexec zsh-vi-preexec


# on mode switch, update mode indicator and cursor shape
function zle-line-init zle-keymap-select {
    case $KEYMAP in
        main|viins  ) MODE_INDICATOR="%{$bg[green]%}%{$fg[white]%}%B I %{$reset_color%}" ;;
        vicmd       ) MODE_INDICATOR="%{$bg[blue]%}%{$fg[white]%}%B N %{$reset_color%}" ;;
        vivis|vivli ) MODE_INDICATOR="%{$bg[magenta]%}%{$fg[white]%}%B V %{$reset_color%}" ;;
        virep       ) MODE_INDICATOR="%{$bg[red]%}%{$fg[white]%}%B R %{$reset_color%}" ;;
    esac
    zle reset-prompt


    if [[ "$SSH_CONNECTION" == '' ]] {
        case $KEYMAP {
            vicmd)
                printf '\e[2 q' # steady block
                ;;

            viins|main)
                printf '\e[6 q' # steady bar
                ;;
            }
        }

    echoti smkx # fix keybindings, since we are overwriting zle-line-init
}
zle -N zle-line-init
zle -N zle-keymap-select


bindkey -M vicmd "^V" edit-command-line # edit command in vim

bind2maps emacs viins vicmd -- "Home" beginning-of-line
bind2maps emacs viins vicmd -- "End" end-of-line
bind2maps vivis -- "Home" vi-visual-bol
bind2maps vivis -- "End" vi-visual-eol

bind2maps viins -- "Backspace" backward-delete-char
bind2maps viins -- "Delete" delete-char
bindkey -M viins "^W" backward-kill-word

